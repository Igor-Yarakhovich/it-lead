{"version":3,"sources":["components/Table/table.module.css","components/Table/table.tsx","components/Field/field.tsx","state/math-reducer.ts","App.tsx","reportWebVitals.ts","state/store.ts","index.tsx","components/Field/field.module.css"],"names":["module","exports","Table","props","className","styles","container","mathParams","value","arithmeticMean","median","stdDev","mode","Field","useState","setValue","finalClass","button","default","field","type","onChange","e","currentTarget","InputClassName","onClick","disabled","initialState","data","mathReducer","state","action","reduce","a","b","length","toFixed","slice","sort","Math","floor","copyState","mean","acc","val","sqrt","concat","current","num","freq","numMap","modeFreq","toPrecision","arithmeticMeanAC","reducerName","medianAC","standardDeviationAC","modeAC","addValueAC","setDataAC","fetchDataThunk1234","dispatch","axios","get","then","res","reducer1","catch","err","console","log","fetchDataThunk4321","reducer2","App","useSelector","mathValue1234","data1234","mathValue4321","data4321","state4321","useDispatch","useEffect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createNamedWrapperReducer","reducerFunction","undefined","rootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qIACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,WAAa,0BAA0B,MAAQ,uB,kICSzFC,EAAkC,SAACC,GAC5C,OACI,sBAAKC,UAAWC,IAAOC,UAAvB,UACI,qBAAKF,UAAWC,IAAOE,WAAvB,kBACA,qBAAKH,UAAWC,IAAOG,MAAvB,SAA+BL,EAAMM,iBACrC,qBAAKL,UAAWC,IAAOE,WAAvB,oBACA,qBAAKH,UAAWC,IAAOG,MAAvB,SAA+BL,EAAMO,SACrC,qBAAKN,UAAWC,IAAOE,WAAvB,oBACA,qBAAKH,UAAWC,IAAOG,MAAvB,SAA+BL,EAAMQ,SACrC,qBAAKP,UAAWC,IAAOE,WAAvB,kBACA,qBAAKH,UAAWC,IAAOG,MAAvB,SAA+BL,EAAMS,W,wBCbpCC,EAAkC,SAACV,GAAW,IAAD,EAC5BW,mBAAS,IADmB,mBAC/CN,EAD+C,KACxCO,EADwC,KAShDC,EAAU,UAAMX,IAAOY,OAAb,YAAuBZ,IAAOa,SAC9C,OACI,sBAAKd,UAAWC,IAAOc,MAAvB,UACI,uBAAOC,KAAK,SAASZ,MAAOA,EAAOa,SAVvB,SAACC,GACjBP,EAASO,EAAEC,cAAcf,QASqCJ,UAAWC,IAAOmB,iBAC5E,wBAAQpB,UAAWY,EAAYS,QARf,WACpBtB,EAAMkB,UAAUb,GAChBO,EAAS,KAMoDW,SAAoB,KAAVlB,EAAnE,uB,gCCPNmB,EAA0B,CAC5BC,KAAM,GACNnB,eAAgB,KAChBC,OAAQ,KACRC,OAAQ,KACRC,KAAM,MA+BGiB,EAAc,WAA4E,IAA3EC,EAA0E,uDAAhDH,EAAcI,EAAkC,uCAElG,OAAQA,EAAOX,MAEX,IAAK,kBACD,OAAO,2BACAU,GADP,IAEIrB,gBAAiBqB,EAAMF,KAAKI,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GAAKJ,EAAMF,KAAKO,QAAQC,QAAQ,KAG5F,IAAK,SACD,OAAO,2BACAN,GADP,IACcpB,OAASoB,EAAMF,KAAKS,QACzBC,MAAK,SAACL,EAAGC,GAAJ,OAAUD,EAAIC,KAAGK,KAAKC,MAAMV,EAAMF,KAAKO,OAAS,IAAKC,QAAQ,KAG/E,IAAK,qBACD,IAAMK,EAAS,eAAOX,GAChBY,EAAOD,EAAUb,KAAKI,QAAO,SAACW,EAAKC,GAAN,OAAcD,EAAMC,IAAK,GAAKH,EAAUb,KAAKO,OAOhF,OANAM,EAAU9B,OAAU4B,KAAKM,KACrBJ,EAAUb,KACLI,QAAO,SAACW,EAAoBC,GAArB,OAA6BD,EAAIG,OAAJ,SAAYF,EAAMF,EAAS,MAAI,IACnEV,QAAO,SAACW,EAAKC,GAAN,OAAcD,EAAMC,IAAK,IACpCH,EAAUb,KAAKO,OAAS,IAC1BC,QAAQ,GACJK,EAGX,IAAK,OAAS,IAAD,EACHA,EAAS,eAAOX,GAUtB,OATAW,EAAU7B,KAAV,UAAkB6B,EAAUb,KAAKI,QAAO,SAAUe,EAAqBC,GACnE,IAAMC,EAAQD,KAAOD,EAAQG,SAAYH,EAAQG,OAAOF,GAAQD,EAAQG,OAAOF,GAAO,EAKtF,OAJIC,EAAOF,EAAQI,UAAYF,EAAO,IAClCF,EAAQI,SAAWF,EACnBF,EAAQnC,KAAOoC,GAEZD,IACR,CAACnC,KAAM,KAAMuC,SAAU,EAAGD,OAAQ,KAAKtC,YAP1C,aAAiB,EAOgCwC,YAAY,GAEtDX,EAGX,IAAK,YACD,OAAO,2BAAIX,GAAX,IAAkBF,KAAK,GAAD,mBAAME,EAAMF,MAAZ,CAAkBG,EAAOvB,UAEnD,IAAK,WACD,OAAO,2BAAIsB,GAAX,IAAkBF,KAAMG,EAAOH,OAEnC,QACI,OAAOE,IAINuB,EAAmB,SAACC,GAAD,MAA0B,CAAClC,KAAM,kBAAmBkC,gBACvEC,EAAW,SAACD,GAAD,MAA0B,CAAClC,KAAM,SAAUkC,gBACtDE,EAAsB,SAACF,GAAD,MAA0B,CAAClC,KAAM,qBAAsBkC,gBAC7EG,EAAS,SAACH,GAAD,MAA0B,CAAClC,KAAM,OAAQkC,gBAClDI,EAAa,SAAClD,EAAe8C,GAAhB,MAAyC,CAAClC,KAAM,YAAaZ,QAAO8C,gBACjFK,EAAY,SAAC/B,EAAqB0B,GAAtB,MAA+C,CAAClC,KAAM,WAAYQ,OAAM0B,gBAEpFM,EAAqB,SAACC,GAC/BC,IAAMC,IAAN,kBACKC,MAAK,SAAAC,GACFJ,EAASF,EAAUM,EAAIrC,KAAKA,KAAMsC,OAErCC,OAAM,SAAAC,GACCC,QAAQC,IAAIF,OAKfG,EAAqB,SAACV,GAC/BC,IAAMC,IAAN,kBACKC,MAAK,SAAAC,GACFJ,EAASF,EAAUM,EAAIrC,KAAKA,KAAM4C,OAErCL,OAAM,SAAAC,GACCC,QAAQC,IAAIF,OC/GfF,EAAW,OACXM,EAAW,OAuETC,MArEf,WAAgB,IAAD,EAQPC,aAAgD,SAAA5C,GAAK,OAAIA,EAAM6C,iBAL/DlE,EAHO,EAGPA,eACAC,EAJO,EAIPA,OACAC,EALO,EAKPA,OACAC,EANO,EAMPA,KACMgE,EAPC,EAOPhD,KAPO,EAWP8C,aAAgD,SAAA5C,GAAK,OAAIA,EAAM+C,iBADzDC,EAVC,EAUPlD,KAAmBmD,EAVZ,wBAaLlB,EAAWmB,cAkCjB,OAhCAC,qBAAU,WACNpB,EAASD,GACTC,EAASU,KAEV,CAACV,IAEJoB,qBAAU,WACFL,EAASzC,OAAS,IAClB0B,EAASR,EAAiBa,IAC1BL,EAASN,EAASW,IAClBL,EAASL,EAAoBU,IAC7BL,EAASJ,EAAOS,OAErB,CAACL,EAAUe,IAEdK,qBAAU,WACFH,EAAS3C,OAAS,IAClB0B,EAASR,EAAiBmB,IAC1BX,EAASN,EAASiB,IAClBX,EAASL,EAAoBgB,IAC7BX,EAASJ,EAAOe,OAErB,CAACX,EAAUiB,IAWV,sBAAK1E,UAAU,MAAf,UACI,oBAAIA,UAAU,UAAd,qCACA,sBAAKA,UAAU,YAAf,UACI,gCACI,cAAC,EAAD,CAAOK,eAAgBA,EAChBC,OAAQA,EACRC,OAAQA,EACRC,KAAMA,IAEb,cAAC,EAAD,CAAOS,SAlBE,SAACb,GACtBqD,EAASH,EAAWlD,EAAO0D,UAoBnB,gCACI,cAAC,EAAD,eAAWa,IACX,cAAC,EAAD,CAAO1D,SAnBE,SAACb,GACtBqD,EAASH,EAAWlD,EAAOgE,iBChDpBU,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,gBCJd,SAASO,EAA0BC,EAAqCrC,GACpE,OAAO,SAACxB,EAAuCC,GAI3C,OAF2BA,EAApBuB,cAEMA,QAD0BsC,IAAV9D,EAGtB6D,EAAgB7D,EAAOC,GAF4BD,GAMlE,IAAM+D,EAAcC,YAAgB,CAChCnB,cAAee,EAA0B7D,EAAaqC,GACtDW,cAAea,EAA0B7D,EAAa2C,KAG7CuB,EAAQC,YAAYH,EAAaI,YAAgBC,MAK9DC,OAAOJ,MAAQA,EClBfK,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACI,cAAC,EAAD,QAGRQ,SAASC,eAAe,SAM5BtB,K,kBCnBAlF,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,eAAiB,8BAA8B,QAAU,uBAAuB,OAAS,sBAAsB,MAAQ,wB","file":"static/js/main.fa1c7dc5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"table_container__19uPB\",\"mathParams\":\"table_mathParams__3lP3L\",\"value\":\"table_value__1_Dqv\"};","import React from 'react';\r\nimport styles from './table.module.css'\r\n\r\ntype TablePropsType = {\r\n    arithmeticMean: string | null\r\n    median: string | null\r\n    stdDev: string | null\r\n    mode: string | null | undefined\r\n}\r\n\r\nexport const Table: React.FC<TablePropsType> = (props) => {\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.mathParams}>Mean</div>\r\n            <div className={styles.value}>{props.arithmeticMean}</div>\r\n            <div className={styles.mathParams}>Median</div>\r\n            <div className={styles.value}>{props.median}</div>\r\n            <div className={styles.mathParams}>StdDev</div>\r\n            <div className={styles.value}>{props.stdDev}</div>\r\n            <div className={styles.mathParams}>Mode</div>\r\n            <div className={styles.value}>{props.mode}</div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, useState} from 'react';\r\nimport styles from './field.module.css'\r\n\r\ntype FieldPropsType = {\r\n    onChange: (newValue: number) => void\r\n}\r\n\r\nexport const Field: React.FC<FieldPropsType> = (props) => {\r\n    const [value, setValue] = useState('')\r\n    const changeValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValue(e.currentTarget.value)\r\n    }\r\n    const onChangeHandler = () => {\r\n        props.onChange(+value)\r\n        setValue('')\r\n    }\r\n    const finalClass = `${styles.button} ${styles.default}`\r\n    return (\r\n        <div className={styles.field}>\r\n            <input type='number' value={value} onChange={changeValue} className={styles.InputClassName}/>\r\n            <button className={finalClass} onClick={onChangeHandler} disabled={value === ''} >Click</button>\r\n        </div>\r\n    )\r\n}","import {Dispatch} from \"redux\";\r\nimport axios from \"axios\";\r\nimport {reducer1, reducer2} from \"../App\";\r\n\r\n\r\ntype DataTypes = {\r\n    data: Array<number>\r\n    arithmeticMean: string | null\r\n    median: string | null\r\n    stdDev: string | null\r\n    mode: string | null | undefined\r\n}\r\n\r\nconst initialState: DataTypes = {\r\n    data: [],\r\n    arithmeticMean: null,\r\n    median: null,\r\n    stdDev: null,\r\n    mode: null\r\n}\r\n\r\ntype ArithmeticMeanActionType = ReturnType<typeof arithmeticMeanAC>\r\ntype MedianActionType = ReturnType<typeof medianAC>\r\ntype standardDeviationActionType = ReturnType<typeof standardDeviationAC>\r\ntype modeActionType = ReturnType<typeof modeAC>\r\ntype addValueActionType = ReturnType<typeof addValueAC>\r\ntype setDataActionType = ReturnType<typeof setDataAC>\r\n\r\n\r\nexport type ActionType = ArithmeticMeanActionType\r\n    | MedianActionType\r\n    | standardDeviationActionType\r\n    | modeActionType\r\n    | addValueActionType\r\n    | setDataActionType\r\n\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\ntype NumMapType = {\r\n    [key: string]: number\r\n}\r\n\r\ntype CurrenMode = {\r\n    mode: null | number\r\n    modeFreq: number\r\n    numMap: NumMapType\r\n}\r\n\r\nexport const mathReducer = (state: InitialStateType = initialState, action: ActionType): DataTypes => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'ARITHMETIC_MEAN':\r\n            return {\r\n                ...state,\r\n                arithmeticMean: (state.data.reduce((a, b) => a + b, 0) / state.data.length).toFixed(6)\r\n            }\r\n\r\n        case 'MEDIAN':\r\n            return {\r\n                ...state, median: (state.data.slice()\r\n                    .sort((a, b) => a - b)[Math.floor(state.data.length / 2)]).toFixed(6)\r\n            }\r\n\r\n        case 'STANDARD DEVIATION': {\r\n            const copyState = {...state}\r\n            const mean = copyState.data.reduce((acc, val) => acc + val, 0) / copyState.data.length\r\n            copyState.stdDev = (Math.sqrt(\r\n                copyState.data\r\n                    .reduce((acc: Array<number>, val) => acc.concat((val - mean) ** 2), [])\r\n                    .reduce((acc, val) => acc + val, 0) /\r\n                (copyState.data.length - 1)\r\n            )).toFixed(6);\r\n            return copyState\r\n        }\r\n\r\n        case 'MODE': {\r\n            const copyState = {...state}\r\n            copyState.mode = (copyState.data.reduce(function (current: CurrenMode, num) {\r\n                const freq = (num in current.numMap) ? ++current.numMap[num] : (current.numMap[num] = 1)\r\n                if (freq > current.modeFreq && freq > 1) {\r\n                    current.modeFreq = freq\r\n                    current.mode = num\r\n                }\r\n                return current;\r\n            }, {mode: null, modeFreq: 0, numMap: {}}).mode)?.toPrecision(8)\r\n\r\n            return copyState\r\n        }\r\n\r\n        case 'ADD_VALUE':\r\n            return {...state, data: [...state.data, action.value]}\r\n\r\n        case 'SET_DATA':\r\n            return {...state, data: action.data}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const arithmeticMeanAC = (reducerName: string) => ({type: 'ARITHMETIC_MEAN', reducerName} as const)\r\nexport const medianAC = (reducerName: string) => ({type: 'MEDIAN', reducerName} as const)\r\nexport const standardDeviationAC = (reducerName: string) => ({type: 'STANDARD DEVIATION', reducerName} as const)\r\nexport const modeAC = (reducerName: string) => ({type: 'MODE', reducerName} as const)\r\nexport const addValueAC = (value: number, reducerName: string) => ({type: 'ADD_VALUE', value, reducerName} as const)\r\nexport const setDataAC = (data: Array<number>, reducerName: string) => ({type: 'SET_DATA', data, reducerName} as const)\r\n\r\nexport const fetchDataThunk1234 = (dispatch: Dispatch) => {\r\n    axios.get<DataTypes>(`data-1234.json`)\r\n        .then(res => {\r\n            dispatch(setDataAC(res.data.data, reducer1))\r\n        })\r\n        .catch(err => {\r\n                console.log(err)\r\n            }\r\n        )\r\n}\r\n\r\nexport const fetchDataThunk4321 = (dispatch: Dispatch) => {\r\n    axios.get<DataTypes>(`data-4321.json`)\r\n        .then(res => {\r\n            dispatch(setDataAC(res.data.data, reducer2))\r\n        })\r\n        .catch(err => {\r\n                console.log(err)\r\n            }\r\n        )\r\n}","import React, {useEffect} from 'react';\nimport './App.css';\nimport {Table} from \"./components/Table/table\";\nimport {Field} from \"./components/Field/field\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"./state/store\";\nimport {\n    addValueAC,\n    arithmeticMeanAC, fetchDataThunk1234, fetchDataThunk4321,\n    InitialStateType,\n    medianAC,\n    modeAC,\n    standardDeviationAC\n} from \"./state/math-reducer\";\n\nexport const reducer1 = \"1234\"\nexport const reducer2 = \"4321\"\n\nfunction App() {\n\n    const {\n        arithmeticMean,\n        median,\n        stdDev,\n        mode,\n        data: data1234\n    } = useSelector<AppRootStateType, InitialStateType>(state => state.mathValue1234)\n    const {\n        data: data4321, ...state4321\n    } = useSelector<AppRootStateType, InitialStateType>(state => state.mathValue4321)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(fetchDataThunk1234)\n        dispatch(fetchDataThunk4321)\n\n    }, [dispatch])\n\n    useEffect(() => {\n        if (data1234.length > 0) {\n            dispatch(arithmeticMeanAC(reducer1))\n            dispatch(medianAC(reducer1))\n            dispatch(standardDeviationAC(reducer1))\n            dispatch(modeAC(reducer1))\n        }\n    }, [dispatch, data1234])\n\n    useEffect(() => {\n        if (data4321.length > 0) {\n            dispatch(arithmeticMeanAC(reducer2))\n            dispatch(medianAC(reducer2))\n            dispatch(standardDeviationAC(reducer2))\n            dispatch(modeAC(reducer2))\n        }\n    }, [dispatch, data4321])\n\n    const addValueHandler1 = (value: number) => {\n        dispatch(addValueAC(value, reducer1))\n    }\n\n    const addValueHandler2 = (value: number) => {\n        dispatch(addValueAC(value, reducer2))\n    }\n\n    return (\n        <div className=\"App\">\n            <h1 className=\"Heading\">IT-Lead React Challenge</h1>\n            <div className=\"Container\">\n                <div>\n                    <Table arithmeticMean={arithmeticMean}\n                           median={median}\n                           stdDev={stdDev}\n                           mode={mode}\n                    />\n                    <Field onChange={addValueHandler1}\n                    />\n                </div>\n                <div>\n                    <Table {...state4321}/>\n                    <Field onChange={addValueHandler2}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {ActionType, mathReducer} from \"./math-reducer\";\r\nimport {reducer1, reducer2} from \"../App\";\r\n\r\nfunction createNamedWrapperReducer(reducerFunction: typeof mathReducer, reducerName:string   ) {\r\n    return (state: ReturnType<typeof mathReducer>, action: ActionType) => {\r\n\r\n        const {reducerName:name} = action\r\n        const isInitializationCall = state === undefined\r\n        if (name !== reducerName && !isInitializationCall) return state\r\n\r\n        return reducerFunction(state, action)\r\n    }\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    mathValue1234: createNamedWrapperReducer(mathReducer, reducer1),\r\n    mathValue4321: createNamedWrapperReducer(mathReducer, reducer2)\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {store} from \"./state/store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"field_field__1jePS\",\"InputClassName\":\"field_InputClassName__3ZZAa\",\"default\":\"field_default__12who\",\"button\":\"field_button__3Mfso\",\"blink\":\"field_blink__2_Vy1\"};"],"sourceRoot":""}